ARM GAS  /tmp/ccsbQlkh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB219:
  27              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f4xx_it.c ****   *
  17:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f4xx_it.c ****   */
  19:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f4xx_it.c **** 
  21:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f4xx_it.c **** #include "main.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f4xx_it.c **** 
  28:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f4xx_it.c **** 
  31:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccsbQlkh.s 			page 2


  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f4xx_it.c **** 
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f4xx_it.c **** 
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f4xx_it.c **** 
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f4xx_it.c **** 
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  60:Core/Src/stm32f4xx_it.c **** extern ADC_HandleTypeDef hadc1;
  61:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_dac1;
  62:Core/Src/stm32f4xx_it.c **** extern DAC_HandleTypeDef hdac;
  63:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  64:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim2;
  65:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  66:Core/Src/stm32f4xx_it.c **** 
  67:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  68:Core/Src/stm32f4xx_it.c **** 
  69:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  71:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32f4xx_it.c **** /**
  73:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Core/Src/stm32f4xx_it.c ****   */
  75:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  76:Core/Src/stm32f4xx_it.c **** {
  28              		.loc 1 76 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  35 0000 FEE7     		b	.L2
  36              		.cfi_endproc
  37              	.LFE219:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
ARM GAS  /tmp/ccsbQlkh.s 			page 3


  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB220:
  77:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32f4xx_it.c **** 
  79:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32f4xx_it.c ****   while (1)
  82:Core/Src/stm32f4xx_it.c ****   {
  83:Core/Src/stm32f4xx_it.c ****   }
  84:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  85:Core/Src/stm32f4xx_it.c **** }
  86:Core/Src/stm32f4xx_it.c **** 
  87:Core/Src/stm32f4xx_it.c **** /**
  88:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  89:Core/Src/stm32f4xx_it.c ****   */
  90:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  91:Core/Src/stm32f4xx_it.c **** {
  49              		.loc 1 91 0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L4:
  56 0000 FEE7     		b	.L4
  57              		.cfi_endproc
  58              	.LFE220:
  60              		.section	.text.MemManage_Handler,"ax",%progbits
  61              		.align	1
  62              		.global	MemManage_Handler
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv4-sp-d16
  68              	MemManage_Handler:
  69              	.LFB221:
  92:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  93:Core/Src/stm32f4xx_it.c **** 
  94:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  95:Core/Src/stm32f4xx_it.c ****   while (1)
  96:Core/Src/stm32f4xx_it.c ****   {
  97:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  98:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  99:Core/Src/stm32f4xx_it.c ****   }
 100:Core/Src/stm32f4xx_it.c **** }
 101:Core/Src/stm32f4xx_it.c **** 
 102:Core/Src/stm32f4xx_it.c **** /**
 103:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 104:Core/Src/stm32f4xx_it.c ****   */
 105:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 106:Core/Src/stm32f4xx_it.c **** {
  70              		.loc 1 106 0
ARM GAS  /tmp/ccsbQlkh.s 			page 4


  71              		.cfi_startproc
  72              		@ Volatile: function does not return.
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76              	.L6:
  77 0000 FEE7     		b	.L6
  78              		.cfi_endproc
  79              	.LFE221:
  81              		.section	.text.BusFault_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	BusFault_Handler
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	BusFault_Handler:
  90              	.LFB222:
 107:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f4xx_it.c **** 
 109:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f4xx_it.c ****   while (1)
 111:Core/Src/stm32f4xx_it.c ****   {
 112:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 114:Core/Src/stm32f4xx_it.c ****   }
 115:Core/Src/stm32f4xx_it.c **** }
 116:Core/Src/stm32f4xx_it.c **** 
 117:Core/Src/stm32f4xx_it.c **** /**
 118:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 119:Core/Src/stm32f4xx_it.c ****   */
 120:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 121:Core/Src/stm32f4xx_it.c **** {
  91              		.loc 1 121 0
  92              		.cfi_startproc
  93              		@ Volatile: function does not return.
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97              	.L8:
  98 0000 FEE7     		b	.L8
  99              		.cfi_endproc
 100              	.LFE222:
 102              		.section	.text.UsageFault_Handler,"ax",%progbits
 103              		.align	1
 104              		.global	UsageFault_Handler
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	UsageFault_Handler:
 111              	.LFB223:
 122:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 123:Core/Src/stm32f4xx_it.c **** 
 124:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 125:Core/Src/stm32f4xx_it.c ****   while (1)
 126:Core/Src/stm32f4xx_it.c ****   {
ARM GAS  /tmp/ccsbQlkh.s 			page 5


 127:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 128:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 129:Core/Src/stm32f4xx_it.c ****   }
 130:Core/Src/stm32f4xx_it.c **** }
 131:Core/Src/stm32f4xx_it.c **** 
 132:Core/Src/stm32f4xx_it.c **** /**
 133:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 134:Core/Src/stm32f4xx_it.c ****   */
 135:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 136:Core/Src/stm32f4xx_it.c **** {
 112              		.loc 1 136 0
 113              		.cfi_startproc
 114              		@ Volatile: function does not return.
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.L10:
 119 0000 FEE7     		b	.L10
 120              		.cfi_endproc
 121              	.LFE223:
 123              		.section	.text.SVC_Handler,"ax",%progbits
 124              		.align	1
 125              		.global	SVC_Handler
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	SVC_Handler:
 132              	.LFB224:
 137:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 138:Core/Src/stm32f4xx_it.c **** 
 139:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 140:Core/Src/stm32f4xx_it.c ****   while (1)
 141:Core/Src/stm32f4xx_it.c ****   {
 142:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 144:Core/Src/stm32f4xx_it.c ****   }
 145:Core/Src/stm32f4xx_it.c **** }
 146:Core/Src/stm32f4xx_it.c **** 
 147:Core/Src/stm32f4xx_it.c **** /**
 148:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 149:Core/Src/stm32f4xx_it.c ****   */
 150:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 151:Core/Src/stm32f4xx_it.c **** {
 133              		.loc 1 151 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 152:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 153:Core/Src/stm32f4xx_it.c **** 
 154:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 155:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 156:Core/Src/stm32f4xx_it.c **** 
 157:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 158:Core/Src/stm32f4xx_it.c **** }
 138              		.loc 1 158 0
ARM GAS  /tmp/ccsbQlkh.s 			page 6


 139 0000 7047     		bx	lr
 140              		.cfi_endproc
 141              	.LFE224:
 143              		.section	.text.DebugMon_Handler,"ax",%progbits
 144              		.align	1
 145              		.global	DebugMon_Handler
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	DebugMon_Handler:
 152              	.LFB225:
 159:Core/Src/stm32f4xx_it.c **** 
 160:Core/Src/stm32f4xx_it.c **** /**
 161:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 162:Core/Src/stm32f4xx_it.c ****   */
 163:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 164:Core/Src/stm32f4xx_it.c **** {
 153              		.loc 1 164 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 165:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 166:Core/Src/stm32f4xx_it.c **** 
 167:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 168:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 169:Core/Src/stm32f4xx_it.c **** 
 170:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 171:Core/Src/stm32f4xx_it.c **** }
 158              		.loc 1 171 0
 159 0000 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE225:
 163              		.section	.text.PendSV_Handler,"ax",%progbits
 164              		.align	1
 165              		.global	PendSV_Handler
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	PendSV_Handler:
 172              	.LFB226:
 172:Core/Src/stm32f4xx_it.c **** 
 173:Core/Src/stm32f4xx_it.c **** /**
 174:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 175:Core/Src/stm32f4xx_it.c ****   */
 176:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 177:Core/Src/stm32f4xx_it.c **** {
 173              		.loc 1 177 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 179:Core/Src/stm32f4xx_it.c **** 
 180:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
ARM GAS  /tmp/ccsbQlkh.s 			page 7


 181:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 182:Core/Src/stm32f4xx_it.c **** 
 183:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 184:Core/Src/stm32f4xx_it.c **** }
 178              		.loc 1 184 0
 179 0000 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE226:
 183              		.section	.text.SysTick_Handler,"ax",%progbits
 184              		.align	1
 185              		.global	SysTick_Handler
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	SysTick_Handler:
 192              	.LFB227:
 185:Core/Src/stm32f4xx_it.c **** 
 186:Core/Src/stm32f4xx_it.c **** /**
 187:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 188:Core/Src/stm32f4xx_it.c ****   */
 189:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 190:Core/Src/stm32f4xx_it.c **** {
 193              		.loc 1 190 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 08B5     		push	{r3, lr}
 198              	.LCFI0:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 3, -8
 201              		.cfi_offset 14, -4
 191:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 192:Core/Src/stm32f4xx_it.c **** 
 193:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 194:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 202              		.loc 1 194 0
 203 0002 FFF7FEFF 		bl	HAL_IncTick
 204              	.LVL0:
 195:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 196:Core/Src/stm32f4xx_it.c **** 
 197:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 198:Core/Src/stm32f4xx_it.c **** }
 205              		.loc 1 198 0
 206 0006 08BD     		pop	{r3, pc}
 207              		.cfi_endproc
 208              	.LFE227:
 210              		.section	.text.DMA1_Stream5_IRQHandler,"ax",%progbits
 211              		.align	1
 212              		.global	DMA1_Stream5_IRQHandler
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv4-sp-d16
 218              	DMA1_Stream5_IRQHandler:
 219              	.LFB228:
 199:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccsbQlkh.s 			page 8


 200:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 201:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 202:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 203:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 204:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 205:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 206:Core/Src/stm32f4xx_it.c **** 
 207:Core/Src/stm32f4xx_it.c **** /**
 208:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream5 global interrupt.
 209:Core/Src/stm32f4xx_it.c ****   */
 210:Core/Src/stm32f4xx_it.c **** void DMA1_Stream5_IRQHandler(void)
 211:Core/Src/stm32f4xx_it.c **** {
 220              		.loc 1 211 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 08B5     		push	{r3, lr}
 225              	.LCFI1:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 3, -8
 228              		.cfi_offset 14, -4
 212:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */
 213:Core/Src/stm32f4xx_it.c **** 
 214:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 0 */
 215:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_dac1);
 229              		.loc 1 215 0
 230 0002 0248     		ldr	r0, .L18
 231 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 232              	.LVL1:
 216:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */
 217:Core/Src/stm32f4xx_it.c **** 
 218:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 1 */
 219:Core/Src/stm32f4xx_it.c **** }
 233              		.loc 1 219 0
 234 0008 08BD     		pop	{r3, pc}
 235              	.L19:
 236 000a 00BF     		.align	2
 237              	.L18:
 238 000c 00000000 		.word	hdma_dac1
 239              		.cfi_endproc
 240              	.LFE228:
 242              		.section	.text.ADC_IRQHandler,"ax",%progbits
 243              		.align	1
 244              		.global	ADC_IRQHandler
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv4-sp-d16
 250              	ADC_IRQHandler:
 251              	.LFB229:
 220:Core/Src/stm32f4xx_it.c **** 
 221:Core/Src/stm32f4xx_it.c **** /**
 222:Core/Src/stm32f4xx_it.c ****   * @brief This function handles ADC1 global interrupt.
 223:Core/Src/stm32f4xx_it.c ****   */
 224:Core/Src/stm32f4xx_it.c **** void ADC_IRQHandler(void)
 225:Core/Src/stm32f4xx_it.c **** {
 252              		.loc 1 225 0
ARM GAS  /tmp/ccsbQlkh.s 			page 9


 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256 0000 08B5     		push	{r3, lr}
 257              	.LCFI2:
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 3, -8
 260              		.cfi_offset 14, -4
 226:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 0 */
 227:Core/Src/stm32f4xx_it.c **** 
 228:Core/Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 0 */
 229:Core/Src/stm32f4xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 261              		.loc 1 229 0
 262 0002 0248     		ldr	r0, .L22
 263 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 264              	.LVL2:
 230:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 1 */
 231:Core/Src/stm32f4xx_it.c **** 
 232:Core/Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 1 */
 233:Core/Src/stm32f4xx_it.c **** }
 265              		.loc 1 233 0
 266 0008 08BD     		pop	{r3, pc}
 267              	.L23:
 268 000a 00BF     		.align	2
 269              	.L22:
 270 000c 00000000 		.word	hadc1
 271              		.cfi_endproc
 272              	.LFE229:
 274              		.section	.text.TIM1_BRK_TIM9_IRQHandler,"ax",%progbits
 275              		.align	1
 276              		.global	TIM1_BRK_TIM9_IRQHandler
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv4-sp-d16
 282              	TIM1_BRK_TIM9_IRQHandler:
 283              	.LFB230:
 234:Core/Src/stm32f4xx_it.c **** 
 235:Core/Src/stm32f4xx_it.c **** /**
 236:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 break interrupt and TIM9 global interrupt.
 237:Core/Src/stm32f4xx_it.c ****   */
 238:Core/Src/stm32f4xx_it.c **** void TIM1_BRK_TIM9_IRQHandler(void)
 239:Core/Src/stm32f4xx_it.c **** {
 284              		.loc 1 239 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288 0000 08B5     		push	{r3, lr}
 289              	.LCFI3:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 3, -8
 292              		.cfi_offset 14, -4
 240:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 0 */
 241:Core/Src/stm32f4xx_it.c **** 
 242:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 0 */
 243:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 293              		.loc 1 243 0
ARM GAS  /tmp/ccsbQlkh.s 			page 10


 294 0002 0248     		ldr	r0, .L26
 295 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 296              	.LVL3:
 244:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 1 */
 245:Core/Src/stm32f4xx_it.c **** 
 246:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 1 */
 247:Core/Src/stm32f4xx_it.c **** }
 297              		.loc 1 247 0
 298 0008 08BD     		pop	{r3, pc}
 299              	.L27:
 300 000a 00BF     		.align	2
 301              	.L26:
 302 000c 00000000 		.word	htim1
 303              		.cfi_endproc
 304              	.LFE230:
 306              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 307              		.align	1
 308              		.global	TIM1_UP_TIM10_IRQHandler
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu fpv4-sp-d16
 314              	TIM1_UP_TIM10_IRQHandler:
 315              	.LFB231:
 248:Core/Src/stm32f4xx_it.c **** 
 249:Core/Src/stm32f4xx_it.c **** /**
 250:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 251:Core/Src/stm32f4xx_it.c ****   */
 252:Core/Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 253:Core/Src/stm32f4xx_it.c **** {
 316              		.loc 1 253 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 08B5     		push	{r3, lr}
 321              	.LCFI4:
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 3, -8
 324              		.cfi_offset 14, -4
 254:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 255:Core/Src/stm32f4xx_it.c **** 
 256:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 257:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 325              		.loc 1 257 0
 326 0002 0248     		ldr	r0, .L30
 327 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 328              	.LVL4:
 258:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 259:Core/Src/stm32f4xx_it.c **** 
 260:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 261:Core/Src/stm32f4xx_it.c **** }
 329              		.loc 1 261 0
 330 0008 08BD     		pop	{r3, pc}
 331              	.L31:
 332 000a 00BF     		.align	2
 333              	.L30:
 334 000c 00000000 		.word	htim1
ARM GAS  /tmp/ccsbQlkh.s 			page 11


 335              		.cfi_endproc
 336              	.LFE231:
 338              		.section	.text.TIM1_TRG_COM_TIM11_IRQHandler,"ax",%progbits
 339              		.align	1
 340              		.global	TIM1_TRG_COM_TIM11_IRQHandler
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	TIM1_TRG_COM_TIM11_IRQHandler:
 347              	.LFB232:
 262:Core/Src/stm32f4xx_it.c **** 
 263:Core/Src/stm32f4xx_it.c **** /**
 264:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 trigger and commutation interrupts and TIM11 global interrupt
 265:Core/Src/stm32f4xx_it.c ****   */
 266:Core/Src/stm32f4xx_it.c **** void TIM1_TRG_COM_TIM11_IRQHandler(void)
 267:Core/Src/stm32f4xx_it.c **** {
 348              		.loc 1 267 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352 0000 08B5     		push	{r3, lr}
 353              	.LCFI5:
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 3, -8
 356              		.cfi_offset 14, -4
 268:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 0 */
 269:Core/Src/stm32f4xx_it.c **** 
 270:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 0 */
 271:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 357              		.loc 1 271 0
 358 0002 0248     		ldr	r0, .L34
 359 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 360              	.LVL5:
 272:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 1 */
 273:Core/Src/stm32f4xx_it.c **** 
 274:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 1 */
 275:Core/Src/stm32f4xx_it.c **** }
 361              		.loc 1 275 0
 362 0008 08BD     		pop	{r3, pc}
 363              	.L35:
 364 000a 00BF     		.align	2
 365              	.L34:
 366 000c 00000000 		.word	htim1
 367              		.cfi_endproc
 368              	.LFE232:
 370              		.section	.text.TIM1_CC_IRQHandler,"ax",%progbits
 371              		.align	1
 372              		.global	TIM1_CC_IRQHandler
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu fpv4-sp-d16
 378              	TIM1_CC_IRQHandler:
 379              	.LFB233:
 276:Core/Src/stm32f4xx_it.c **** 
 277:Core/Src/stm32f4xx_it.c **** /**
ARM GAS  /tmp/ccsbQlkh.s 			page 12


 278:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 capture compare interrupt.
 279:Core/Src/stm32f4xx_it.c ****   */
 280:Core/Src/stm32f4xx_it.c **** void TIM1_CC_IRQHandler(void)
 281:Core/Src/stm32f4xx_it.c **** {
 380              		.loc 1 281 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 08B5     		push	{r3, lr}
 385              	.LCFI6:
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 3, -8
 388              		.cfi_offset 14, -4
 282:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_CC_IRQn 0 */
 283:Core/Src/stm32f4xx_it.c **** 
 284:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_CC_IRQn 0 */
 285:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 389              		.loc 1 285 0
 390 0002 0248     		ldr	r0, .L38
 391 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 392              	.LVL6:
 286:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_CC_IRQn 1 */
 287:Core/Src/stm32f4xx_it.c **** 
 288:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_CC_IRQn 1 */
 289:Core/Src/stm32f4xx_it.c **** }
 393              		.loc 1 289 0
 394 0008 08BD     		pop	{r3, pc}
 395              	.L39:
 396 000a 00BF     		.align	2
 397              	.L38:
 398 000c 00000000 		.word	htim1
 399              		.cfi_endproc
 400              	.LFE233:
 402              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 403              		.align	1
 404              		.global	TIM2_IRQHandler
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	TIM2_IRQHandler:
 411              	.LFB234:
 290:Core/Src/stm32f4xx_it.c **** 
 291:Core/Src/stm32f4xx_it.c **** /**
 292:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 293:Core/Src/stm32f4xx_it.c ****   */
 294:Core/Src/stm32f4xx_it.c **** void TIM2_IRQHandler(void)
 295:Core/Src/stm32f4xx_it.c **** {
 412              		.loc 1 295 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 08B5     		push	{r3, lr}
 417              	.LCFI7:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 3, -8
 420              		.cfi_offset 14, -4
ARM GAS  /tmp/ccsbQlkh.s 			page 13


 296:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 297:Core/Src/stm32f4xx_it.c **** 
 298:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 299:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 421              		.loc 1 299 0
 422 0002 0248     		ldr	r0, .L42
 423 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 424              	.LVL7:
 300:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 301:Core/Src/stm32f4xx_it.c **** 
 302:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 303:Core/Src/stm32f4xx_it.c **** }
 425              		.loc 1 303 0
 426 0008 08BD     		pop	{r3, pc}
 427              	.L43:
 428 000a 00BF     		.align	2
 429              	.L42:
 430 000c 00000000 		.word	htim2
 431              		.cfi_endproc
 432              	.LFE234:
 434              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 435              		.align	1
 436              		.global	TIM6_DAC_IRQHandler
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv4-sp-d16
 442              	TIM6_DAC_IRQHandler:
 443              	.LFB235:
 304:Core/Src/stm32f4xx_it.c **** 
 305:Core/Src/stm32f4xx_it.c **** /**
 306:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
 307:Core/Src/stm32f4xx_it.c ****   */
 308:Core/Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 309:Core/Src/stm32f4xx_it.c **** {
 444              		.loc 1 309 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448 0000 08B5     		push	{r3, lr}
 449              	.LCFI8:
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 3, -8
 452              		.cfi_offset 14, -4
 310:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 311:Core/Src/stm32f4xx_it.c **** 
 312:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 313:Core/Src/stm32f4xx_it.c ****   HAL_DAC_IRQHandler(&hdac);
 453              		.loc 1 313 0
 454 0002 0248     		ldr	r0, .L46
 455 0004 FFF7FEFF 		bl	HAL_DAC_IRQHandler
 456              	.LVL8:
 314:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 315:Core/Src/stm32f4xx_it.c **** 
 316:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 317:Core/Src/stm32f4xx_it.c **** }
 457              		.loc 1 317 0
ARM GAS  /tmp/ccsbQlkh.s 			page 14


 458 0008 08BD     		pop	{r3, pc}
 459              	.L47:
 460 000a 00BF     		.align	2
 461              	.L46:
 462 000c 00000000 		.word	hdac
 463              		.cfi_endproc
 464              	.LFE235:
 466              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 467              		.align	1
 468              		.global	DMA2_Stream0_IRQHandler
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 472              		.fpu fpv4-sp-d16
 474              	DMA2_Stream0_IRQHandler:
 475              	.LFB236:
 318:Core/Src/stm32f4xx_it.c **** 
 319:Core/Src/stm32f4xx_it.c **** /**
 320:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 321:Core/Src/stm32f4xx_it.c ****   */
 322:Core/Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 323:Core/Src/stm32f4xx_it.c **** {
 476              		.loc 1 323 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480 0000 08B5     		push	{r3, lr}
 481              	.LCFI9:
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 3, -8
 484              		.cfi_offset 14, -4
 324:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 325:Core/Src/stm32f4xx_it.c **** 
 326:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 327:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 485              		.loc 1 327 0
 486 0002 0248     		ldr	r0, .L50
 487 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 488              	.LVL9:
 328:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 329:Core/Src/stm32f4xx_it.c **** 
 330:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 331:Core/Src/stm32f4xx_it.c **** }
 489              		.loc 1 331 0
 490 0008 08BD     		pop	{r3, pc}
 491              	.L51:
 492 000a 00BF     		.align	2
 493              	.L50:
 494 000c 00000000 		.word	hdma_adc1
 495              		.cfi_endproc
 496              	.LFE236:
 498              		.text
 499              	.Letext0:
 500              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 501              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 502              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 503              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
ARM GAS  /tmp/ccsbQlkh.s 			page 15


 504              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 505              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 506              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 507              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 508              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 509              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 510              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 511              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 512              		.file 14 "/usr/include/newlib/sys/lock.h"
 513              		.file 15 "/usr/include/newlib/sys/_types.h"
 514              		.file 16 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 515              		.file 17 "/usr/include/newlib/sys/reent.h"
 516              		.file 18 "/usr/include/newlib/stdlib.h"
ARM GAS  /tmp/ccsbQlkh.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccsbQlkh.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccsbQlkh.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccsbQlkh.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccsbQlkh.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccsbQlkh.s:61     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccsbQlkh.s:68     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccsbQlkh.s:82     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccsbQlkh.s:89     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccsbQlkh.s:103    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccsbQlkh.s:110    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccsbQlkh.s:124    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccsbQlkh.s:131    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccsbQlkh.s:144    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccsbQlkh.s:151    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccsbQlkh.s:164    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccsbQlkh.s:171    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccsbQlkh.s:184    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccsbQlkh.s:191    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccsbQlkh.s:211    .text.DMA1_Stream5_IRQHandler:0000000000000000 $t
     /tmp/ccsbQlkh.s:218    .text.DMA1_Stream5_IRQHandler:0000000000000000 DMA1_Stream5_IRQHandler
     /tmp/ccsbQlkh.s:238    .text.DMA1_Stream5_IRQHandler:000000000000000c $d
     /tmp/ccsbQlkh.s:243    .text.ADC_IRQHandler:0000000000000000 $t
     /tmp/ccsbQlkh.s:250    .text.ADC_IRQHandler:0000000000000000 ADC_IRQHandler
     /tmp/ccsbQlkh.s:270    .text.ADC_IRQHandler:000000000000000c $d
     /tmp/ccsbQlkh.s:275    .text.TIM1_BRK_TIM9_IRQHandler:0000000000000000 $t
     /tmp/ccsbQlkh.s:282    .text.TIM1_BRK_TIM9_IRQHandler:0000000000000000 TIM1_BRK_TIM9_IRQHandler
     /tmp/ccsbQlkh.s:302    .text.TIM1_BRK_TIM9_IRQHandler:000000000000000c $d
     /tmp/ccsbQlkh.s:307    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 $t
     /tmp/ccsbQlkh.s:314    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 TIM1_UP_TIM10_IRQHandler
     /tmp/ccsbQlkh.s:334    .text.TIM1_UP_TIM10_IRQHandler:000000000000000c $d
     /tmp/ccsbQlkh.s:339    .text.TIM1_TRG_COM_TIM11_IRQHandler:0000000000000000 $t
     /tmp/ccsbQlkh.s:346    .text.TIM1_TRG_COM_TIM11_IRQHandler:0000000000000000 TIM1_TRG_COM_TIM11_IRQHandler
     /tmp/ccsbQlkh.s:366    .text.TIM1_TRG_COM_TIM11_IRQHandler:000000000000000c $d
     /tmp/ccsbQlkh.s:371    .text.TIM1_CC_IRQHandler:0000000000000000 $t
     /tmp/ccsbQlkh.s:378    .text.TIM1_CC_IRQHandler:0000000000000000 TIM1_CC_IRQHandler
     /tmp/ccsbQlkh.s:398    .text.TIM1_CC_IRQHandler:000000000000000c $d
     /tmp/ccsbQlkh.s:403    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccsbQlkh.s:410    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccsbQlkh.s:430    .text.TIM2_IRQHandler:000000000000000c $d
     /tmp/ccsbQlkh.s:435    .text.TIM6_DAC_IRQHandler:0000000000000000 $t
     /tmp/ccsbQlkh.s:442    .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
     /tmp/ccsbQlkh.s:462    .text.TIM6_DAC_IRQHandler:000000000000000c $d
     /tmp/ccsbQlkh.s:467    .text.DMA2_Stream0_IRQHandler:0000000000000000 $t
     /tmp/ccsbQlkh.s:474    .text.DMA2_Stream0_IRQHandler:0000000000000000 DMA2_Stream0_IRQHandler
     /tmp/ccsbQlkh.s:494    .text.DMA2_Stream0_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_dac1
HAL_ADC_IRQHandler
hadc1
HAL_TIM_IRQHandler
htim1
htim2
ARM GAS  /tmp/ccsbQlkh.s 			page 17


HAL_DAC_IRQHandler
hdac
hdma_adc1
